# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV['VAGRANT_SERVER_URL'] = 'https://vagrant.elab.pro'
Vagrant.configure("2") do |config|
  config.vm.provider "virtualbox" do |vb|
    vb.memory = 2048
    vb.cpus = 1
  end

  config.vm.define "proxy" do |proxy|
    proxy.vm.box = "{{ os_env }}"
    proxy.vm.box_check_update = false
    proxy.vm.hostname = "proxy"
    proxy.vm.network "private_network", ip: "{{ ip_proxy }}"
	ssh_pub_key = File.readlines("{{ ssh_key }}").first.strip
    proxy.vm.provision "shell", inline: <<-SHELL
		echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
		echo #{ssh_pub_key} >> /root/.ssh/authorized_keys
    SHELL
  end
    config.vm.define "app1" do |app1|
    app1.vm.box = "{{ os_env }}"
    app1.vm.box_check_update = false
    app1.vm.hostname = "app1"
    app1.vm.network "private_network", ip: "{{ ip_app1 }}"
	ssh_pub_key = File.readlines("{{ ssh_key }}").first.strip
    app1.vm.provision "shell", inline: <<-SHELL
		echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
		echo #{ssh_pub_key} >> /root/.ssh/authorized_keys
    SHELL
  end
    config.vm.define "app2" do |app2|
    app2.vm.box = "{{ os_env }}"
    app2.vm.box_check_update = false
    app2.vm.hostname = "app2"
    app2.vm.network "private_network", ip: "{{ ip_app2 }}"
	ssh_pub_key = File.readlines("{{ ssh_key }}").first.strip
    app2.vm.provision "shell", inline: <<-SHELL
		echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
		echo #{ssh_pub_key} >> /root/.ssh/authorized_keys
    SHELL
  end
    config.vm.define "database" do |database|
    database.vm.box = "{{ os_env }} "
    database.vm.box_check_update = false
    database.vm.hostname = "database"
    database.vm.network "private_network", ip: "{{ ip_database }}"
	ssh_pub_key = File.readlines("{{ ssh_key }}").first.strip
    database.vm.provision "shell", inline: <<-SHELL
		echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
		echo #{ssh_pub_key} >> /root/.ssh/authorized_keys
    SHELL
  end
end
